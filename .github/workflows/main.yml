name: Deploy Flask ML App with Health Check (Single Backup)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to EC2, Health Check, and Rollback on Failure
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v3

      - name: 🔐 Set up SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: 🧰 Backup Existing App on EC2 (overwrite always)
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} '
            if [ -d ~/mlapp ]; then
              echo "🔁 Backing up to ~/mlapp-backup (overwriting if exists)"
              rm -rf ~/mlapp-backup
              cp -r ~/mlapp ~/mlapp-backup
            else
              echo "ℹ️ No existing app found to backup."
            fi
          '

      - name: 🚚 Upload New App Code to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} 'mkdir -p ~/mlapp'
          scp -o StrictHostKeyChecking=no -r app/* ec2-user@${{ secrets.EC2_HOST }}:~/mlapp/

      - name: 🐍 Install Python & pip on EC2
        run: |
          ssh -tt ec2-user@${{ secrets.EC2_HOST }} '
            sudo yum install -y python3 &&
            python3 -m ensurepip --upgrade &&
            pip3 install --upgrade pip setuptools
          '

      - name: 📦 Install Python Dependencies
        run: |
          ssh -tt ec2-user@${{ secrets.EC2_HOST }} '
            cd ~/mlapp &&
            pip3 install -r requirements.txt
          '

      - name: 🚀 Stop Old Flask App and Start New
        run: |
          ssh -tt ec2-user@${{ secrets.EC2_HOST }} '
            echo "🛑 Killing app on port 5000..."
            PID=$(lsof -t -i:5000) && kill -9 $PID || echo "No app running on port 5000"

            echo "🚀 Starting Flask app..."
            cd ~/mlapp
            nohup python3 app.py > output.log 2>&1 < /dev/null & disown
            sleep 5

            echo "📄 Tail output.log:"
            if [ -f ~/mlapp/output.log ]; then
              tail -n 20 ~/mlapp/output.log
            else
              echo "❌ output.log not found."
            fi
          '

      - name: ⏱️ Wait for App to Boot
        run: sleep 10

      - name: 🔍 Health Check
        run: |
          echo "🔎 Running health check..."
          curl --fail http://${{ secrets.EC2_HOST }}:5000/health

      - name: ✅ Notify Success
        if: success()
        run: echo "✅ Deployment succeeded and passed health check!"

      - name: 🔁 Rollback on Failure
        if: failure()
        run: |
          echo "❌ Health check failed. Attempting rollback..."
          ssh -tt ec2-user@${{ secrets.EC2_HOST }} '
            if [ -d ~/mlapp-backup ]; then
              echo "🔁 Restoring from backup..."
              rm -rf ~/mlapp
              cp -r ~/mlapp-backup ~/mlapp

              echo "🛑 Killing app on port 5000..."
              PID=$(lsof -t -i:5000) && kill -9 $PID || echo "No app running"

              echo "🚀 Restarting backup app..."
              cd ~/mlapp
              nohup python3 app.py > output.log 2>&1 < /dev/null & disown
              sleep 5

              echo "🔎 Verifying rollback health..."
              curl --fail http://localhost:5000/health \
                && echo "✅ Rollback succeeded" \
                || echo "❌ Rollback health check failed"
            else
              echo "🚫 No backup found. Manual recovery required."
            fi
          '
